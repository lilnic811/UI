<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="musicDataSet" targetNamespace="http://tempuri.org/musicDataSet.xsd" xmlns:mstns="http://tempuri.org/musicDataSet.xsd" xmlns="http://tempuri.org/musicDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="musicConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="musicConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.UI.Properties.Settings.GlobalReference.Default.musicConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AlbumsTableAdapter" GeneratorDataComponentClassName="AlbumsTableAdapter" Name="Albums" UserDataComponentName="AlbumsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="musicConnectionString (Settings)" DbObjectName="music.dbo.Albums" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Albums] WHERE (([AlbumID] = @Original_AlbumID) AND ((@IsNull_AlbumName = 1 AND [AlbumName] IS NULL) OR ([AlbumName] = @Original_AlbumName)) AND ([MusicianID] = @Original_MusicianID) AND ([ReleaseYear] = @Original_ReleaseYear) AND ([GenreID] = @Original_GenreID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_AlbumID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="AlbumID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_AlbumName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AlbumName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_AlbumName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="AlbumName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_MusicianID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="MusicianID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ReleaseYear" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReleaseYear" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GenreID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GenreID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Albums] ([AlbumName], [MusicianID], [ReleaseYear], [GenreID]) VALUES (@AlbumName, @MusicianID, @ReleaseYear, @GenreID);
SELECT AlbumID, AlbumName, MusicianID, ReleaseYear, GenreID FROM Albums WHERE (AlbumID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@AlbumName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="AlbumName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@MusicianID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="MusicianID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ReleaseYear" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReleaseYear" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GenreID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GenreID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT AlbumID, AlbumName, MusicianID, ReleaseYear, GenreID FROM dbo.Albums</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Albums] SET [AlbumName] = @AlbumName, [MusicianID] = @MusicianID, [ReleaseYear] = @ReleaseYear, [GenreID] = @GenreID WHERE (([AlbumID] = @Original_AlbumID) AND ((@IsNull_AlbumName = 1 AND [AlbumName] IS NULL) OR ([AlbumName] = @Original_AlbumName)) AND ([MusicianID] = @Original_MusicianID) AND ([ReleaseYear] = @Original_ReleaseYear) AND ([GenreID] = @Original_GenreID));
SELECT AlbumID, AlbumName, MusicianID, ReleaseYear, GenreID FROM Albums WHERE (AlbumID = @AlbumID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@AlbumName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="AlbumName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@MusicianID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="MusicianID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ReleaseYear" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReleaseYear" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GenreID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GenreID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_AlbumID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="AlbumID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_AlbumName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AlbumName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_AlbumName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="AlbumName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_MusicianID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="MusicianID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ReleaseYear" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReleaseYear" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GenreID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GenreID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="AlbumID" ColumnName="AlbumID" DataSourceName="music.dbo.Albums" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@AlbumID" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="AlbumID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AlbumID" DataSetColumn="AlbumID" />
              <Mapping SourceColumn="AlbumName" DataSetColumn="AlbumName" />
              <Mapping SourceColumn="MusicianID" DataSetColumn="MusicianID" />
              <Mapping SourceColumn="ReleaseYear" DataSetColumn="ReleaseYear" />
              <Mapping SourceColumn="GenreID" DataSetColumn="GenreID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GenreTableAdapter" GeneratorDataComponentClassName="GenreTableAdapter" Name="Genre" UserDataComponentName="GenreTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="musicConnectionString (Settings)" DbObjectName="music.dbo.Genre" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Genre] WHERE (([GenreID] = @Original_GenreID) AND ([GenreName] = @Original_GenreName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GenreID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GenreID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_GenreName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="GenreName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Genre] ([GenreName]) VALUES (@GenreName);
SELECT GenreID, GenreName FROM Genre WHERE (GenreID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@GenreName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="GenreName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT GenreID, GenreName FROM dbo.Genre</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Genre] SET [GenreName] = @GenreName WHERE (([GenreID] = @Original_GenreID) AND ([GenreName] = @Original_GenreName));
SELECT GenreID, GenreName FROM Genre WHERE (GenreID = @GenreID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@GenreName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="GenreName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GenreID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GenreID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_GenreName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="GenreName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="GenreID" ColumnName="GenreID" DataSourceName="music.dbo.Genre" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@GenreID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="GenreID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="GenreID" DataSetColumn="GenreID" />
              <Mapping SourceColumn="GenreName" DataSetColumn="GenreName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MusiciansTableAdapter" GeneratorDataComponentClassName="MusiciansTableAdapter" Name="Musicians" UserDataComponentName="MusiciansTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="musicConnectionString (Settings)" DbObjectName="music.dbo.Musicians" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Musicians] WHERE (([MusicianID] = @Original_MusicianID) AND ([MusicianName] = @Original_MusicianName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_MusicianID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="MusicianID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_MusicianName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MusicianName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Musicians] ([MusicianName]) VALUES (@MusicianName);
SELECT MusicianID, MusicianName FROM Musicians WHERE (MusicianID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@MusicianName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MusicianName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MusicianID, MusicianName FROM dbo.Musicians</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Musicians] SET [MusicianName] = @MusicianName WHERE (([MusicianID] = @Original_MusicianID) AND ([MusicianName] = @Original_MusicianName));
SELECT MusicianID, MusicianName FROM Musicians WHERE (MusicianID = @MusicianID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@MusicianName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MusicianName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_MusicianID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="MusicianID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_MusicianName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="MusicianName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="MusicianID" ColumnName="MusicianID" DataSourceName="music.dbo.Musicians" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@MusicianID" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="MusicianID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MusicianID" DataSetColumn="MusicianID" />
              <Mapping SourceColumn="MusicianName" DataSetColumn="MusicianName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PlaylistsTableAdapter" GeneratorDataComponentClassName="PlaylistsTableAdapter" Name="Playlists" UserDataComponentName="PlaylistsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="musicConnectionString (Settings)" DbObjectName="music.dbo.Playlists" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Playlists] WHERE (([PlaylistID] = @Original_PlaylistID) AND ([PlaylistName] = @Original_PlaylistName) AND ([UserID] = @Original_UserID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_PlaylistID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="PlaylistID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PlaylistName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PlaylistName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_UserID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Playlists] ([PlaylistName], [UserID]) VALUES (@PlaylistName, @UserID);
SELECT PlaylistID, PlaylistName, UserID FROM Playlists WHERE (PlaylistID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PlaylistName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PlaylistName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@UserID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT PlaylistID, PlaylistName, UserID FROM dbo.Playlists</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Playlists] SET [PlaylistName] = @PlaylistName, [UserID] = @UserID WHERE (([PlaylistID] = @Original_PlaylistID) AND ([PlaylistName] = @Original_PlaylistName) AND ([UserID] = @Original_UserID));
SELECT PlaylistID, PlaylistName, UserID FROM Playlists WHERE (PlaylistID = @PlaylistID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PlaylistName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PlaylistName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@UserID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_PlaylistID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="PlaylistID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PlaylistName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PlaylistName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_UserID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="PlaylistID" ColumnName="PlaylistID" DataSourceName="music.dbo.Playlists" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@PlaylistID" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="PlaylistID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PlaylistID" DataSetColumn="PlaylistID" />
              <Mapping SourceColumn="PlaylistName" DataSetColumn="PlaylistName" />
              <Mapping SourceColumn="UserID" DataSetColumn="UserID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PlaylistSongsTableAdapter" GeneratorDataComponentClassName="PlaylistSongsTableAdapter" Name="PlaylistSongs" UserDataComponentName="PlaylistSongsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="musicConnectionString (Settings)" DbObjectName="music.dbo.PlaylistSongs" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PlaylistSongs] WHERE (([PlaylistSongID] = @Original_PlaylistSongID) AND ([PlaylistID] = @Original_PlaylistID) AND ([SongID] = @Original_SongID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_PlaylistSongID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="PlaylistSongID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_PlaylistID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="PlaylistID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_SongID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PlaylistSongs] ([PlaylistID], [SongID]) VALUES (@PlaylistID, @SongID);
SELECT PlaylistSongID, PlaylistID, SongID FROM PlaylistSongs WHERE (PlaylistSongID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@PlaylistID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="PlaylistID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@SongID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT PlaylistSongID, PlaylistID, SongID FROM dbo.PlaylistSongs</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PlaylistSongs] SET [PlaylistID] = @PlaylistID, [SongID] = @SongID WHERE (([PlaylistSongID] = @Original_PlaylistSongID) AND ([PlaylistID] = @Original_PlaylistID) AND ([SongID] = @Original_SongID));
SELECT PlaylistSongID, PlaylistID, SongID FROM PlaylistSongs WHERE (PlaylistSongID = @PlaylistSongID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@PlaylistID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="PlaylistID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@SongID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_PlaylistSongID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="PlaylistSongID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_PlaylistID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="PlaylistID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_SongID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="PlaylistSongID" ColumnName="PlaylistSongID" DataSourceName="music.dbo.PlaylistSongs" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@PlaylistSongID" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="PlaylistSongID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PlaylistSongID" DataSetColumn="PlaylistSongID" />
              <Mapping SourceColumn="PlaylistID" DataSetColumn="PlaylistID" />
              <Mapping SourceColumn="SongID" DataSetColumn="SongID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ProvidersTableAdapter" GeneratorDataComponentClassName="ProvidersTableAdapter" Name="Providers" UserDataComponentName="ProvidersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="musicConnectionString (Settings)" DbObjectName="music.dbo.Providers" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Providers] WHERE (([ProviderID] = @Original_ProviderID) AND ([ProviderName] = @Original_ProviderName) AND ((@IsNull_ProviderURL = 1 AND [ProviderURL] IS NULL) OR ([ProviderURL] = @Original_ProviderURL)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_ProviderID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="ProviderID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ProviderName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProviderName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ProviderURL" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProviderURL" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ProviderURL" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProviderURL" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Providers] ([ProviderName], [ProviderURL]) VALUES (@ProviderName, @ProviderURL);
SELECT ProviderID, ProviderName, ProviderURL FROM Providers WHERE (ProviderID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ProviderName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProviderName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ProviderURL" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProviderURL" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ProviderID, ProviderName, ProviderURL FROM dbo.Providers</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Providers] SET [ProviderName] = @ProviderName, [ProviderURL] = @ProviderURL WHERE (([ProviderID] = @Original_ProviderID) AND ([ProviderName] = @Original_ProviderName) AND ((@IsNull_ProviderURL = 1 AND [ProviderURL] IS NULL) OR ([ProviderURL] = @Original_ProviderURL)));
SELECT ProviderID, ProviderName, ProviderURL FROM Providers WHERE (ProviderID = @ProviderID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ProviderName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProviderName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@ProviderURL" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProviderURL" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_ProviderID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="ProviderID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ProviderName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProviderName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ProviderURL" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ProviderURL" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_ProviderURL" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="ProviderURL" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ProviderID" ColumnName="ProviderID" DataSourceName="music.dbo.Providers" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@ProviderID" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="ProviderID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ProviderID" DataSetColumn="ProviderID" />
              <Mapping SourceColumn="ProviderName" DataSetColumn="ProviderName" />
              <Mapping SourceColumn="ProviderURL" DataSetColumn="ProviderURL" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ProviderSongsTableAdapter" GeneratorDataComponentClassName="ProviderSongsTableAdapter" Name="ProviderSongs" UserDataComponentName="ProviderSongsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="musicConnectionString (Settings)" DbObjectName="music.dbo.ProviderSongs" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ProviderSongs] WHERE (([ProviderSongID] = @Original_ProviderSongID) AND ([SongID] = @Original_SongID) AND ([ProviderID] = @Original_ProviderID) AND ((@IsNull_SongURL = 1 AND [SongURL] IS NULL) OR ([SongURL] = @Original_SongURL)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_ProviderSongID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="ProviderSongID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_SongID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_ProviderID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="ProviderID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SongURL" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SongURL" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_SongURL" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SongURL" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ProviderSongs] ([SongID], [ProviderID], [SongURL]) VALUES (@SongID, @ProviderID, @SongURL);
SELECT ProviderSongID, SongID, ProviderID, SongURL FROM ProviderSongs WHERE (ProviderSongID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@SongID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@ProviderID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="ProviderID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SongURL" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SongURL" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ProviderSongID, SongID, ProviderID, SongURL FROM dbo.ProviderSongs</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ProviderSongs] SET [SongID] = @SongID, [ProviderID] = @ProviderID, [SongURL] = @SongURL WHERE (([ProviderSongID] = @Original_ProviderSongID) AND ([SongID] = @Original_SongID) AND ([ProviderID] = @Original_ProviderID) AND ((@IsNull_SongURL = 1 AND [SongURL] IS NULL) OR ([SongURL] = @Original_SongURL)));
SELECT ProviderSongID, SongID, ProviderID, SongURL FROM ProviderSongs WHERE (ProviderSongID = @ProviderSongID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@SongID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@ProviderID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="ProviderID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SongURL" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SongURL" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_ProviderSongID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="ProviderSongID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_SongID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_ProviderID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="ProviderID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SongURL" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SongURL" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_SongURL" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SongURL" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ProviderSongID" ColumnName="ProviderSongID" DataSourceName="music.dbo.ProviderSongs" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@ProviderSongID" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="ProviderSongID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ProviderSongID" DataSetColumn="ProviderSongID" />
              <Mapping SourceColumn="SongID" DataSetColumn="SongID" />
              <Mapping SourceColumn="ProviderID" DataSetColumn="ProviderID" />
              <Mapping SourceColumn="SongURL" DataSetColumn="SongURL" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SongFeaturedArtistsTableAdapter" GeneratorDataComponentClassName="SongFeaturedArtistsTableAdapter" Name="SongFeaturedArtists" UserDataComponentName="SongFeaturedArtistsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="musicConnectionString (Settings)" DbObjectName="music.dbo.SongFeaturedArtists" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[SongFeaturedArtists] WHERE (([FeaturedID] = @Original_FeaturedID) AND ([SongID] = @Original_SongID) AND ([MusicianID] = @Original_MusicianID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_FeaturedID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="FeaturedID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_SongID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_MusicianID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="MusicianID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[SongFeaturedArtists] ([SongID], [MusicianID]) VALUES (@SongID, @MusicianID);
SELECT FeaturedID, SongID, MusicianID FROM SongFeaturedArtists WHERE (FeaturedID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@SongID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@MusicianID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="MusicianID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT FeaturedID, SongID, MusicianID FROM dbo.SongFeaturedArtists</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[SongFeaturedArtists] SET [SongID] = @SongID, [MusicianID] = @MusicianID WHERE (([FeaturedID] = @Original_FeaturedID) AND ([SongID] = @Original_SongID) AND ([MusicianID] = @Original_MusicianID));
SELECT FeaturedID, SongID, MusicianID FROM SongFeaturedArtists WHERE (FeaturedID = @FeaturedID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@SongID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@MusicianID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="MusicianID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_FeaturedID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="FeaturedID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_SongID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_MusicianID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="MusicianID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="FeaturedID" ColumnName="FeaturedID" DataSourceName="music.dbo.SongFeaturedArtists" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@FeaturedID" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="FeaturedID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="FeaturedID" DataSetColumn="FeaturedID" />
              <Mapping SourceColumn="SongID" DataSetColumn="SongID" />
              <Mapping SourceColumn="MusicianID" DataSetColumn="MusicianID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SongsTableAdapter" GeneratorDataComponentClassName="SongsTableAdapter" Name="Songs" UserDataComponentName="SongsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="musicConnectionString (Settings)" DbObjectName="music.dbo.Songs" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Songs] WHERE (([SongID] = @Original_SongID) AND ([SongName] = @Original_SongName) AND ([AlbumID] = @Original_AlbumID) AND ((@IsNull_TrackNumber = 1 AND [TrackNumber] IS NULL) OR ([TrackNumber] = @Original_TrackNumber)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_SongID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_SongName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SongName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_AlbumID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="AlbumID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TrackNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TrackNumber" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TrackNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TrackNumber" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Songs] ([SongName], [AlbumID], [TrackNumber]) VALUES (@SongName, @AlbumID, @TrackNumber);
SELECT SongID, SongName, AlbumID, TrackNumber FROM Songs WHERE (SongID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SongName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SongName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@AlbumID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="AlbumID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TrackNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TrackNumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT SongID, SongName, AlbumID, TrackNumber FROM dbo.Songs</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Songs] SET [SongName] = @SongName, [AlbumID] = @AlbumID, [TrackNumber] = @TrackNumber WHERE (([SongID] = @Original_SongID) AND ([SongName] = @Original_SongName) AND ([AlbumID] = @Original_AlbumID) AND ((@IsNull_TrackNumber = 1 AND [TrackNumber] IS NULL) OR ([TrackNumber] = @Original_TrackNumber)));
SELECT SongID, SongName, AlbumID, TrackNumber FROM Songs WHERE (SongID = @SongID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SongName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SongName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@AlbumID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="AlbumID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TrackNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TrackNumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_SongID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_SongName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SongName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_AlbumID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="AlbumID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TrackNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TrackNumber" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TrackNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TrackNumber" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="SongID" ColumnName="SongID" DataSourceName="music.dbo.Songs" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@SongID" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SongID" DataSetColumn="SongID" />
              <Mapping SourceColumn="SongName" DataSetColumn="SongName" />
              <Mapping SourceColumn="AlbumID" DataSetColumn="AlbumID" />
              <Mapping SourceColumn="TrackNumber" DataSetColumn="TrackNumber" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UserRatingsTableAdapter" GeneratorDataComponentClassName="UserRatingsTableAdapter" Name="UserRatings" UserDataComponentName="UserRatingsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="musicConnectionString (Settings)" DbObjectName="music.dbo.UserRatings" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[UserRatings] WHERE (([UserRatingID] = @Original_UserRatingID) AND ((@IsNull_UserID = 1 AND [UserID] IS NULL) OR ([UserID] = @Original_UserID)) AND ((@IsNull_SongID = 1 AND [SongID] IS NULL) OR ([SongID] = @Original_SongID)) AND ((@IsNull_Rating = 1 AND [Rating] IS NULL) OR ([Rating] = @Original_Rating)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_UserRatingID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="UserRatingID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_UserID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SongID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_SongID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Rating" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Rating" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@Original_Rating" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="Rating" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[UserRatings] ([UserID], [SongID], [Rating]) VALUES (@UserID, @SongID, @Rating);
SELECT UserRatingID, UserID, SongID, Rating FROM UserRatings WHERE (UserRatingID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@UserID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@SongID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@Rating" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="Rating" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT UserRatingID, UserID, SongID, Rating FROM dbo.UserRatings</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[UserRatings] SET [UserID] = @UserID, [SongID] = @SongID, [Rating] = @Rating WHERE (([UserRatingID] = @Original_UserRatingID) AND ((@IsNull_UserID = 1 AND [UserID] IS NULL) OR ([UserID] = @Original_UserID)) AND ((@IsNull_SongID = 1 AND [SongID] IS NULL) OR ([SongID] = @Original_SongID)) AND ((@IsNull_Rating = 1 AND [Rating] IS NULL) OR ([Rating] = @Original_Rating)));
SELECT UserRatingID, UserID, SongID, Rating FROM UserRatings WHERE (UserRatingID = @UserRatingID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@UserID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@SongID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@Rating" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="Rating" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_UserRatingID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="UserRatingID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_UserID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SongID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_SongID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Rating" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Rating" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Byte" Direction="Input" ParameterName="@Original_Rating" Precision="0" ProviderType="TinyInt" Scale="0" Size="0" SourceColumn="Rating" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="UserRatingID" ColumnName="UserRatingID" DataSourceName="music.dbo.UserRatings" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@UserRatingID" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="UserRatingID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UserRatingID" DataSetColumn="UserRatingID" />
              <Mapping SourceColumn="UserID" DataSetColumn="UserID" />
              <Mapping SourceColumn="SongID" DataSetColumn="SongID" />
              <Mapping SourceColumn="Rating" DataSetColumn="Rating" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UsersTableAdapter" GeneratorDataComponentClassName="UsersTableAdapter" Name="Users" UserDataComponentName="UsersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="musicConnectionString (Settings)" DbObjectName="music.dbo.Users" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Users] WHERE (([UserID] = @Original_UserID) AND ([Username] = @Original_Username) AND ([UserEmail] = @Original_UserEmail) AND ((@IsNull_IsActive = 1 AND [IsActive] IS NULL) OR ([IsActive] = @Original_IsActive)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_UserID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_UserEmail" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserEmail" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_IsActive" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IsActive" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsActive" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsActive" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Users] ([Username], [UserEmail], [IsActive]) VALUES (@Username, @UserEmail, @IsActive);
SELECT UserID, Username, UserEmail, IsActive FROM Users WHERE (UserID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@UserEmail" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserEmail" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsActive" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsActive" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT UserID, Username, UserEmail, IsActive FROM dbo.Users</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Users] SET [Username] = @Username, [UserEmail] = @UserEmail, [IsActive] = @IsActive WHERE (([UserID] = @Original_UserID) AND ([Username] = @Original_Username) AND ([UserEmail] = @Original_UserEmail) AND ((@IsNull_IsActive = 1 AND [IsActive] IS NULL) OR ([IsActive] = @Original_IsActive)));
SELECT UserID, Username, UserEmail, IsActive FROM Users WHERE (UserID = @UserID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@UserEmail" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserEmail" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@IsActive" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsActive" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_UserID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Username" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_UserEmail" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="UserEmail" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_IsActive" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IsActive" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@Original_IsActive" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="IsActive" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="UserID" ColumnName="UserID" DataSourceName="music.dbo.Users" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@UserID" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UserID" DataSetColumn="UserID" />
              <Mapping SourceColumn="Username" DataSetColumn="Username" />
              <Mapping SourceColumn="UserEmail" DataSetColumn="UserEmail" />
              <Mapping SourceColumn="IsActive" DataSetColumn="IsActive" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="musicDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="musicDataSet" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="musicDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Albums" msprop:Generator_RowClassName="AlbumsRow" msprop:Generator_RowEvHandlerName="AlbumsRowChangeEventHandler" msprop:Generator_RowDeletedName="AlbumsRowDeleted" msprop:Generator_RowDeletingName="AlbumsRowDeleting" msprop:Generator_RowEvArgName="AlbumsRowChangeEvent" msprop:Generator_TablePropName="Albums" msprop:Generator_RowChangedName="AlbumsRowChanged" msprop:Generator_UserTableName="Albums" msprop:Generator_RowChangingName="AlbumsRowChanging" msprop:Generator_TableClassName="AlbumsDataTable" msprop:Generator_TableVarName="tableAlbums">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AlbumID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="AlbumID" msprop:Generator_ColumnPropNameInTable="AlbumIDColumn" msprop:Generator_ColumnPropNameInRow="AlbumID" msprop:Generator_ColumnVarNameInTable="columnAlbumID" type="xs:long" />
              <xs:element name="AlbumName" msprop:Generator_UserColumnName="AlbumName" msprop:Generator_ColumnPropNameInTable="AlbumNameColumn" msprop:Generator_ColumnPropNameInRow="AlbumName" msprop:Generator_ColumnVarNameInTable="columnAlbumName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="140" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="MusicianID" msprop:Generator_UserColumnName="MusicianID" msprop:Generator_ColumnPropNameInTable="MusicianIDColumn" msprop:Generator_ColumnPropNameInRow="MusicianID" msprop:Generator_ColumnVarNameInTable="columnMusicianID" type="xs:long" />
              <xs:element name="ReleaseYear" msprop:Generator_UserColumnName="ReleaseYear" msprop:Generator_ColumnPropNameInTable="ReleaseYearColumn" msprop:Generator_ColumnPropNameInRow="ReleaseYear" msprop:Generator_ColumnVarNameInTable="columnReleaseYear" type="xs:int" />
              <xs:element name="GenreID" msprop:Generator_UserColumnName="GenreID" msprop:Generator_ColumnPropNameInTable="GenreIDColumn" msprop:Generator_ColumnPropNameInRow="GenreID" msprop:Generator_ColumnVarNameInTable="columnGenreID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Genre" msprop:Generator_RowClassName="GenreRow" msprop:Generator_RowEvHandlerName="GenreRowChangeEventHandler" msprop:Generator_RowDeletedName="GenreRowDeleted" msprop:Generator_RowDeletingName="GenreRowDeleting" msprop:Generator_RowEvArgName="GenreRowChangeEvent" msprop:Generator_TablePropName="Genre" msprop:Generator_RowChangedName="GenreRowChanged" msprop:Generator_UserTableName="Genre" msprop:Generator_RowChangingName="GenreRowChanging" msprop:Generator_TableClassName="GenreDataTable" msprop:Generator_TableVarName="tableGenre">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="GenreID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="GenreID" msprop:Generator_ColumnPropNameInTable="GenreIDColumn" msprop:Generator_ColumnPropNameInRow="GenreID" msprop:Generator_ColumnVarNameInTable="columnGenreID" type="xs:int" />
              <xs:element name="GenreName" msprop:Generator_UserColumnName="GenreName" msprop:Generator_ColumnPropNameInTable="GenreNameColumn" msprop:Generator_ColumnPropNameInRow="GenreName" msprop:Generator_ColumnVarNameInTable="columnGenreName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="55" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Musicians" msprop:Generator_RowClassName="MusiciansRow" msprop:Generator_RowEvHandlerName="MusiciansRowChangeEventHandler" msprop:Generator_RowDeletedName="MusiciansRowDeleted" msprop:Generator_RowDeletingName="MusiciansRowDeleting" msprop:Generator_RowEvArgName="MusiciansRowChangeEvent" msprop:Generator_TablePropName="Musicians" msprop:Generator_RowChangedName="MusiciansRowChanged" msprop:Generator_UserTableName="Musicians" msprop:Generator_RowChangingName="MusiciansRowChanging" msprop:Generator_TableClassName="MusiciansDataTable" msprop:Generator_TableVarName="tableMusicians">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MusicianID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="MusicianID" msprop:Generator_ColumnPropNameInTable="MusicianIDColumn" msprop:Generator_ColumnPropNameInRow="MusicianID" msprop:Generator_ColumnVarNameInTable="columnMusicianID" type="xs:long" />
              <xs:element name="MusicianName" msprop:Generator_UserColumnName="MusicianName" msprop:Generator_ColumnPropNameInTable="MusicianNameColumn" msprop:Generator_ColumnPropNameInRow="MusicianName" msprop:Generator_ColumnVarNameInTable="columnMusicianName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="55" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Playlists" msprop:Generator_RowClassName="PlaylistsRow" msprop:Generator_RowEvHandlerName="PlaylistsRowChangeEventHandler" msprop:Generator_RowDeletedName="PlaylistsRowDeleted" msprop:Generator_RowDeletingName="PlaylistsRowDeleting" msprop:Generator_RowEvArgName="PlaylistsRowChangeEvent" msprop:Generator_TablePropName="Playlists" msprop:Generator_RowChangedName="PlaylistsRowChanged" msprop:Generator_UserTableName="Playlists" msprop:Generator_RowChangingName="PlaylistsRowChanging" msprop:Generator_TableClassName="PlaylistsDataTable" msprop:Generator_TableVarName="tablePlaylists">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PlaylistID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="PlaylistID" msprop:Generator_ColumnPropNameInTable="PlaylistIDColumn" msprop:Generator_ColumnPropNameInRow="PlaylistID" msprop:Generator_ColumnVarNameInTable="columnPlaylistID" type="xs:long" />
              <xs:element name="PlaylistName" msprop:Generator_UserColumnName="PlaylistName" msprop:Generator_ColumnPropNameInTable="PlaylistNameColumn" msprop:Generator_ColumnPropNameInRow="PlaylistName" msprop:Generator_ColumnVarNameInTable="columnPlaylistName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="140" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="UserID" msprop:Generator_UserColumnName="UserID" msprop:Generator_ColumnPropNameInTable="UserIDColumn" msprop:Generator_ColumnPropNameInRow="UserID" msprop:Generator_ColumnVarNameInTable="columnUserID" type="xs:long" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PlaylistSongs" msprop:Generator_RowClassName="PlaylistSongsRow" msprop:Generator_RowEvHandlerName="PlaylistSongsRowChangeEventHandler" msprop:Generator_RowDeletedName="PlaylistSongsRowDeleted" msprop:Generator_RowDeletingName="PlaylistSongsRowDeleting" msprop:Generator_RowEvArgName="PlaylistSongsRowChangeEvent" msprop:Generator_TablePropName="PlaylistSongs" msprop:Generator_RowChangedName="PlaylistSongsRowChanged" msprop:Generator_UserTableName="PlaylistSongs" msprop:Generator_RowChangingName="PlaylistSongsRowChanging" msprop:Generator_TableClassName="PlaylistSongsDataTable" msprop:Generator_TableVarName="tablePlaylistSongs">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PlaylistSongID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="PlaylistSongID" msprop:Generator_ColumnPropNameInTable="PlaylistSongIDColumn" msprop:Generator_ColumnPropNameInRow="PlaylistSongID" msprop:Generator_ColumnVarNameInTable="columnPlaylistSongID" type="xs:long" />
              <xs:element name="PlaylistID" msprop:Generator_UserColumnName="PlaylistID" msprop:Generator_ColumnPropNameInTable="PlaylistIDColumn" msprop:Generator_ColumnPropNameInRow="PlaylistID" msprop:Generator_ColumnVarNameInTable="columnPlaylistID" type="xs:long" />
              <xs:element name="SongID" msprop:Generator_UserColumnName="SongID" msprop:Generator_ColumnPropNameInTable="SongIDColumn" msprop:Generator_ColumnPropNameInRow="SongID" msprop:Generator_ColumnVarNameInTable="columnSongID" type="xs:long" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Providers" msprop:Generator_RowClassName="ProvidersRow" msprop:Generator_RowEvHandlerName="ProvidersRowChangeEventHandler" msprop:Generator_RowDeletedName="ProvidersRowDeleted" msprop:Generator_RowDeletingName="ProvidersRowDeleting" msprop:Generator_RowEvArgName="ProvidersRowChangeEvent" msprop:Generator_TablePropName="Providers" msprop:Generator_RowChangedName="ProvidersRowChanged" msprop:Generator_UserTableName="Providers" msprop:Generator_RowChangingName="ProvidersRowChanging" msprop:Generator_TableClassName="ProvidersDataTable" msprop:Generator_TableVarName="tableProviders">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ProviderID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="ProviderID" msprop:Generator_ColumnPropNameInTable="ProviderIDColumn" msprop:Generator_ColumnPropNameInRow="ProviderID" msprop:Generator_ColumnVarNameInTable="columnProviderID" type="xs:long" />
              <xs:element name="ProviderName" msprop:Generator_UserColumnName="ProviderName" msprop:Generator_ColumnPropNameInTable="ProviderNameColumn" msprop:Generator_ColumnPropNameInRow="ProviderName" msprop:Generator_ColumnVarNameInTable="columnProviderName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="140" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ProviderURL" msprop:Generator_UserColumnName="ProviderURL" msprop:Generator_ColumnPropNameInTable="ProviderURLColumn" msprop:Generator_ColumnPropNameInRow="ProviderURL" msprop:Generator_ColumnVarNameInTable="columnProviderURL" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="600" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ProviderSongs" msprop:Generator_RowClassName="ProviderSongsRow" msprop:Generator_RowEvHandlerName="ProviderSongsRowChangeEventHandler" msprop:Generator_RowDeletedName="ProviderSongsRowDeleted" msprop:Generator_RowDeletingName="ProviderSongsRowDeleting" msprop:Generator_RowEvArgName="ProviderSongsRowChangeEvent" msprop:Generator_TablePropName="ProviderSongs" msprop:Generator_RowChangedName="ProviderSongsRowChanged" msprop:Generator_UserTableName="ProviderSongs" msprop:Generator_RowChangingName="ProviderSongsRowChanging" msprop:Generator_TableClassName="ProviderSongsDataTable" msprop:Generator_TableVarName="tableProviderSongs">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ProviderSongID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="ProviderSongID" msprop:Generator_ColumnPropNameInTable="ProviderSongIDColumn" msprop:Generator_ColumnPropNameInRow="ProviderSongID" msprop:Generator_ColumnVarNameInTable="columnProviderSongID" type="xs:long" />
              <xs:element name="SongID" msprop:Generator_UserColumnName="SongID" msprop:Generator_ColumnPropNameInTable="SongIDColumn" msprop:Generator_ColumnPropNameInRow="SongID" msprop:Generator_ColumnVarNameInTable="columnSongID" type="xs:long" />
              <xs:element name="ProviderID" msprop:Generator_UserColumnName="ProviderID" msprop:Generator_ColumnPropNameInTable="ProviderIDColumn" msprop:Generator_ColumnPropNameInRow="ProviderID" msprop:Generator_ColumnVarNameInTable="columnProviderID" type="xs:long" />
              <xs:element name="SongURL" msprop:Generator_UserColumnName="SongURL" msprop:Generator_ColumnPropNameInTable="SongURLColumn" msprop:Generator_ColumnPropNameInRow="SongURL" msprop:Generator_ColumnVarNameInTable="columnSongURL" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="600" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SongFeaturedArtists" msprop:Generator_RowClassName="SongFeaturedArtistsRow" msprop:Generator_RowEvHandlerName="SongFeaturedArtistsRowChangeEventHandler" msprop:Generator_RowDeletedName="SongFeaturedArtistsRowDeleted" msprop:Generator_RowDeletingName="SongFeaturedArtistsRowDeleting" msprop:Generator_RowEvArgName="SongFeaturedArtistsRowChangeEvent" msprop:Generator_TablePropName="SongFeaturedArtists" msprop:Generator_RowChangedName="SongFeaturedArtistsRowChanged" msprop:Generator_UserTableName="SongFeaturedArtists" msprop:Generator_RowChangingName="SongFeaturedArtistsRowChanging" msprop:Generator_TableClassName="SongFeaturedArtistsDataTable" msprop:Generator_TableVarName="tableSongFeaturedArtists">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="FeaturedID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="FeaturedID" msprop:Generator_ColumnPropNameInTable="FeaturedIDColumn" msprop:Generator_ColumnPropNameInRow="FeaturedID" msprop:Generator_ColumnVarNameInTable="columnFeaturedID" type="xs:long" />
              <xs:element name="SongID" msprop:Generator_UserColumnName="SongID" msprop:Generator_ColumnPropNameInTable="SongIDColumn" msprop:Generator_ColumnPropNameInRow="SongID" msprop:Generator_ColumnVarNameInTable="columnSongID" type="xs:long" />
              <xs:element name="MusicianID" msprop:Generator_UserColumnName="MusicianID" msprop:Generator_ColumnPropNameInTable="MusicianIDColumn" msprop:Generator_ColumnPropNameInRow="MusicianID" msprop:Generator_ColumnVarNameInTable="columnMusicianID" type="xs:long" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Songs" msprop:Generator_RowClassName="SongsRow" msprop:Generator_RowEvHandlerName="SongsRowChangeEventHandler" msprop:Generator_RowDeletedName="SongsRowDeleted" msprop:Generator_RowDeletingName="SongsRowDeleting" msprop:Generator_RowEvArgName="SongsRowChangeEvent" msprop:Generator_TablePropName="Songs" msprop:Generator_RowChangedName="SongsRowChanged" msprop:Generator_UserTableName="Songs" msprop:Generator_RowChangingName="SongsRowChanging" msprop:Generator_TableClassName="SongsDataTable" msprop:Generator_TableVarName="tableSongs">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SongID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="SongID" msprop:Generator_ColumnPropNameInTable="SongIDColumn" msprop:Generator_ColumnPropNameInRow="SongID" msprop:Generator_ColumnVarNameInTable="columnSongID" type="xs:long" />
              <xs:element name="SongName" msprop:Generator_UserColumnName="SongName" msprop:Generator_ColumnPropNameInTable="SongNameColumn" msprop:Generator_ColumnPropNameInRow="SongName" msprop:Generator_ColumnVarNameInTable="columnSongName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AlbumID" msprop:Generator_UserColumnName="AlbumID" msprop:Generator_ColumnPropNameInTable="AlbumIDColumn" msprop:Generator_ColumnPropNameInRow="AlbumID" msprop:Generator_ColumnVarNameInTable="columnAlbumID" type="xs:long" />
              <xs:element name="TrackNumber" msprop:Generator_UserColumnName="TrackNumber" msprop:Generator_ColumnPropNameInTable="TrackNumberColumn" msprop:Generator_ColumnPropNameInRow="TrackNumber" msprop:Generator_ColumnVarNameInTable="columnTrackNumber" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="UserRatings" msprop:Generator_RowClassName="UserRatingsRow" msprop:Generator_RowEvHandlerName="UserRatingsRowChangeEventHandler" msprop:Generator_RowDeletedName="UserRatingsRowDeleted" msprop:Generator_RowDeletingName="UserRatingsRowDeleting" msprop:Generator_RowEvArgName="UserRatingsRowChangeEvent" msprop:Generator_TablePropName="UserRatings" msprop:Generator_RowChangedName="UserRatingsRowChanged" msprop:Generator_UserTableName="UserRatings" msprop:Generator_RowChangingName="UserRatingsRowChanging" msprop:Generator_TableClassName="UserRatingsDataTable" msprop:Generator_TableVarName="tableUserRatings">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UserRatingID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="UserRatingID" msprop:Generator_ColumnPropNameInTable="UserRatingIDColumn" msprop:Generator_ColumnPropNameInRow="UserRatingID" msprop:Generator_ColumnVarNameInTable="columnUserRatingID" type="xs:long" />
              <xs:element name="UserID" msprop:Generator_UserColumnName="UserID" msprop:Generator_ColumnPropNameInTable="UserIDColumn" msprop:Generator_ColumnPropNameInRow="UserID" msprop:Generator_ColumnVarNameInTable="columnUserID" type="xs:long" minOccurs="0" />
              <xs:element name="SongID" msprop:Generator_UserColumnName="SongID" msprop:Generator_ColumnPropNameInTable="SongIDColumn" msprop:Generator_ColumnPropNameInRow="SongID" msprop:Generator_ColumnVarNameInTable="columnSongID" type="xs:long" minOccurs="0" />
              <xs:element name="Rating" msprop:Generator_UserColumnName="Rating" msprop:Generator_ColumnPropNameInTable="RatingColumn" msprop:Generator_ColumnPropNameInRow="Rating" msprop:Generator_ColumnVarNameInTable="columnRating" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Users" msprop:Generator_RowClassName="UsersRow" msprop:Generator_RowEvHandlerName="UsersRowChangeEventHandler" msprop:Generator_RowDeletedName="UsersRowDeleted" msprop:Generator_RowDeletingName="UsersRowDeleting" msprop:Generator_RowEvArgName="UsersRowChangeEvent" msprop:Generator_TablePropName="Users" msprop:Generator_RowChangedName="UsersRowChanged" msprop:Generator_UserTableName="Users" msprop:Generator_RowChangingName="UsersRowChanging" msprop:Generator_TableClassName="UsersDataTable" msprop:Generator_TableVarName="tableUsers">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UserID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="UserID" msprop:Generator_ColumnPropNameInTable="UserIDColumn" msprop:Generator_ColumnPropNameInRow="UserID" msprop:Generator_ColumnVarNameInTable="columnUserID" type="xs:long" />
              <xs:element name="Username" msprop:Generator_UserColumnName="Username" msprop:Generator_ColumnPropNameInTable="UsernameColumn" msprop:Generator_ColumnPropNameInRow="Username" msprop:Generator_ColumnVarNameInTable="columnUsername">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="140" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="UserEmail" msprop:Generator_UserColumnName="UserEmail" msprop:Generator_ColumnPropNameInTable="UserEmailColumn" msprop:Generator_ColumnPropNameInRow="UserEmail" msprop:Generator_ColumnVarNameInTable="columnUserEmail">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="IsActive" msprop:Generator_UserColumnName="IsActive" msprop:Generator_ColumnPropNameInTable="IsActiveColumn" msprop:Generator_ColumnPropNameInRow="IsActive" msprop:Generator_ColumnVarNameInTable="columnIsActive" type="xs:boolean" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Albums" />
      <xs:field xpath="mstns:AlbumID" />
    </xs:unique>
    <xs:unique name="Genre_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Genre" />
      <xs:field xpath="mstns:GenreID" />
    </xs:unique>
    <xs:unique name="Musicians_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Musicians" />
      <xs:field xpath="mstns:MusicianID" />
    </xs:unique>
    <xs:unique name="Playlists_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Playlists" />
      <xs:field xpath="mstns:PlaylistID" />
    </xs:unique>
    <xs:unique name="PlaylistSongs_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PlaylistSongs" />
      <xs:field xpath="mstns:PlaylistSongID" />
    </xs:unique>
    <xs:unique name="Providers_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Providers" />
      <xs:field xpath="mstns:ProviderID" />
    </xs:unique>
    <xs:unique name="ProviderSongs_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ProviderSongs" />
      <xs:field xpath="mstns:ProviderSongID" />
    </xs:unique>
    <xs:unique name="SongFeaturedArtists_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SongFeaturedArtists" />
      <xs:field xpath="mstns:FeaturedID" />
    </xs:unique>
    <xs:unique name="Songs_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Songs" />
      <xs:field xpath="mstns:SongID" />
    </xs:unique>
    <xs:unique name="UserRatings_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:UserRatings" />
      <xs:field xpath="mstns:UserRatingID" />
    </xs:unique>
    <xs:unique name="Users_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Users" />
      <xs:field xpath="mstns:UserID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK__Albums__GenreID__1D7B6025" msdata:parent="Genre" msdata:child="Albums" msdata:parentkey="GenreID" msdata:childkey="GenreID" msprop:Generator_UserParentTable="Genre" msprop:Generator_UserChildTable="Albums" msprop:Generator_RelationVarName="relationFK__Albums__GenreID__1D7B6025" msprop:Generator_ChildPropName="GetAlbumsRows" msprop:Generator_ParentPropName="GenreRow" msprop:Generator_UserRelationName="FK__Albums__GenreID__1D7B6025" />
      <msdata:Relationship name="FK__Albums__Musician__1C873BEC" msdata:parent="Musicians" msdata:child="Albums" msdata:parentkey="MusicianID" msdata:childkey="MusicianID" msprop:Generator_UserParentTable="Musicians" msprop:Generator_UserChildTable="Albums" msprop:Generator_RelationVarName="relationFK__Albums__Musician__1C873BEC" msprop:Generator_ChildPropName="GetAlbumsRows" msprop:Generator_ParentPropName="MusiciansRow" msprop:Generator_UserRelationName="FK__Albums__Musician__1C873BEC" />
      <msdata:Relationship name="FK__Playlists__UserI__57A801BA" msdata:parent="Users" msdata:child="Playlists" msdata:parentkey="UserID" msdata:childkey="UserID" msprop:Generator_UserParentTable="Users" msprop:Generator_UserChildTable="Playlists" msprop:Generator_RelationVarName="relationFK__Playlists__UserI__57A801BA" msprop:Generator_ChildPropName="GetPlaylistsRows" msprop:Generator_ParentPropName="UsersRow" msprop:Generator_UserRelationName="FK__Playlists__UserI__57A801BA" />
      <msdata:Relationship name="FK__PlaylistS__Playl__5B78929E" msdata:parent="Playlists" msdata:child="PlaylistSongs" msdata:parentkey="PlaylistID" msdata:childkey="PlaylistID" msprop:Generator_UserParentTable="Playlists" msprop:Generator_UserChildTable="PlaylistSongs" msprop:Generator_RelationVarName="relationFK__PlaylistS__Playl__5B78929E" msprop:Generator_ChildPropName="GetPlaylistSongsRows" msprop:Generator_UserRelationName="FK__PlaylistS__Playl__5B78929E" msprop:Generator_ParentPropName="PlaylistsRow" />
      <msdata:Relationship name="FK__PlaylistS__SongI__5C6CB6D7" msdata:parent="Songs" msdata:child="PlaylistSongs" msdata:parentkey="SongID" msdata:childkey="SongID" msprop:Generator_UserParentTable="Songs" msprop:Generator_UserChildTable="PlaylistSongs" msprop:Generator_RelationVarName="relationFK__PlaylistS__SongI__5C6CB6D7" msprop:Generator_ChildPropName="GetPlaylistSongsRows" msprop:Generator_ParentPropName="SongsRow" msprop:Generator_UserRelationName="FK__PlaylistS__SongI__5C6CB6D7" />
      <msdata:Relationship name="FK__ProviderS__Provi__4A4E069C" msdata:parent="Providers" msdata:child="ProviderSongs" msdata:parentkey="ProviderID" msdata:childkey="ProviderID" msprop:Generator_UserParentTable="Providers" msprop:Generator_UserChildTable="ProviderSongs" msprop:Generator_RelationVarName="relationFK__ProviderS__Provi__4A4E069C" msprop:Generator_ChildPropName="GetProviderSongsRows" msprop:Generator_UserRelationName="FK__ProviderS__Provi__4A4E069C" msprop:Generator_ParentPropName="ProvidersRow" />
      <msdata:Relationship name="FK__ProviderS__SongI__4959E263" msdata:parent="Songs" msdata:child="ProviderSongs" msdata:parentkey="SongID" msdata:childkey="SongID" msprop:Generator_UserParentTable="Songs" msprop:Generator_UserChildTable="ProviderSongs" msprop:Generator_RelationVarName="relationFK__ProviderS__SongI__4959E263" msprop:Generator_ChildPropName="GetProviderSongsRows" msprop:Generator_ParentPropName="SongsRow" msprop:Generator_UserRelationName="FK__ProviderS__SongI__4959E263" />
      <msdata:Relationship name="FK_dbo_Musicians_MusicianID" msdata:parent="Musicians" msdata:child="SongFeaturedArtists" msdata:parentkey="MusicianID" msdata:childkey="MusicianID" msprop:Generator_UserParentTable="Musicians" msprop:Generator_UserChildTable="SongFeaturedArtists" msprop:Generator_RelationVarName="relationFK_dbo_Musicians_MusicianID" msprop:Generator_ChildPropName="GetSongFeaturedArtistsRows" msprop:Generator_UserRelationName="FK_dbo_Musicians_MusicianID" msprop:Generator_ParentPropName="MusiciansRow" />
      <msdata:Relationship name="FK_dbo_Songs_SongID" msdata:parent="Songs" msdata:child="SongFeaturedArtists" msdata:parentkey="SongID" msdata:childkey="SongID" msprop:Generator_UserParentTable="Songs" msprop:Generator_UserChildTable="SongFeaturedArtists" msprop:Generator_RelationVarName="relationFK_dbo_Songs_SongID" msprop:Generator_ChildPropName="GetSongFeaturedArtistsRows" msprop:Generator_ParentPropName="SongsRow" msprop:Generator_UserRelationName="FK_dbo_Songs_SongID" />
      <msdata:Relationship name="FK__Songs__AlbumID__42ACE4D4" msdata:parent="Albums" msdata:child="Songs" msdata:parentkey="AlbumID" msdata:childkey="AlbumID" msprop:Generator_UserParentTable="Albums" msprop:Generator_UserChildTable="Songs" msprop:Generator_RelationVarName="relationFK__Songs__AlbumID__42ACE4D4" msprop:Generator_ChildPropName="GetSongsRows" msprop:Generator_UserRelationName="FK__Songs__AlbumID__42ACE4D4" msprop:Generator_ParentPropName="AlbumsRow" />
      <msdata:Relationship name="FK__UserRatin__SongI__52E34C9D" msdata:parent="Songs" msdata:child="UserRatings" msdata:parentkey="SongID" msdata:childkey="SongID" msprop:Generator_UserParentTable="Songs" msprop:Generator_UserChildTable="UserRatings" msprop:Generator_RelationVarName="relationFK__UserRatin__SongI__52E34C9D" msprop:Generator_ChildPropName="GetUserRatingsRows" msprop:Generator_UserRelationName="FK__UserRatin__SongI__52E34C9D" msprop:Generator_ParentPropName="SongsRow" />
      <msdata:Relationship name="FK__UserRatin__UserI__51EF2864" msdata:parent="Users" msdata:child="UserRatings" msdata:parentkey="UserID" msdata:childkey="UserID" msprop:Generator_UserParentTable="Users" msprop:Generator_UserChildTable="UserRatings" msprop:Generator_RelationVarName="relationFK__UserRatin__UserI__51EF2864" msprop:Generator_ChildPropName="GetUserRatingsRows" msprop:Generator_ParentPropName="UsersRow" msprop:Generator_UserRelationName="FK__UserRatin__UserI__51EF2864" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>